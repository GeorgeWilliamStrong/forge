
def laplacian(u, dx_sq, b):
    """
    10th order accurate Laplacian.

    Parameters
    ----------
    u : torch.Tensor
        Set of parallel wavefields.
    dx_sq : float
        Squared spatial increment.
    b : torch.Tensor or None
        Buoyancy model.

    Returns
    -------
    torch.Tensor
        Laplacian of u.

    """
    if b is None:

        a5 = 8/25200
        a4 = 125/25200
        a3 = 1000/25200
        a2 = 6000/25200
        a1 = 42000/25200
        a0 = 73766/25200

        return (1/dx_sq)*(a5*u[:, :-10, 5:-5]-a4*u[:, 1:-9, 5:-5] +
                          a3*u[:, 2:-8, 5:-5]-a2*u[:, 3:-7, 5:-5] +
                          a1*u[:, 4:-6, 5:-5]-a0*u[:, 5:-5, 5:-5] +
                          a1*u[:, 6:-4, 5:-5]-a2*u[:, 7:-3, 5:-5] +
                          a3*u[:, 8:-2, 5:-5]-a4*u[:, 9:-1, 5:-5] +
                          a5*u[:, 10:, 5:-5]+a5*u[:, 5:-5, :-10] -
                          a4*u[:, 5:-5, 1:-9]+a3*u[:, 5:-5, 2:-8] -
                          a2*u[:, 5:-5, 3:-7]+a1*u[:, 5:-5, 4:-6] -
                          a0*u[:, 5:-5, 5:-5]+a1*u[:, 5:-5, 6:-4] -
                          a2*u[:, 5:-5, 7:-3]+a3*u[:, 5:-5, 8:-2] -
                          a4*u[:, 5:-5, 9:-1]+a5*u[:, 5:-5, 10:])

    else:

        a5 = 1225/10321920
        a4 = 18225/10321920
        a3 = 142884/10321920
        a2 = 926100/10321920
        a1 = 12502350/10321920
        a0 = None

        # 10th order variable density kernel: the stuff of nightmares!
        return (1/b[9:-9, 9:-9])*((1/(2*dx_sq))* \
               (u[:, :-18, 9:-9]  * (a5**2)  * (b[4:-14, 9:-9]+b[5:-13, 9:-9]) - \
                u[:, 1:-17, 9:-9] *  a5*a4   * (b[4:-14, 9:-9]+b[5:-13, 9:-9]+b[6:-12, 9:-9])+ \
                u[:, 2:-16, 9:-9] * (a5*a3   * (b[4:-14, 9:-9]+b[7:-11, 9:-9]) + (a5*a3+(a4**2))   * (b[5:-13, 9:-9]+b[6:-12, 9:-9])) - \
                u[:, 3:-15, 9:-9] * (a5*a2   * (b[4:-14, 9:-9]+b[8:-10, 9:-9]) + (a5*a2+a4*a3)     * (b[5:-13, 9:-9]+b[7:-11, 9:-9])  + 2*a4*a3           *  b[6:-12, 9:-9])+ \
                u[:, 4:-14, 9:-9] * (a5*a1   * (b[4:-14, 9:-9]+b[9:-9, 9:-9])  + (a5*a1+a4*a2)     * (b[5:-13, 9:-9]+b[8:-10, 9:-9])  + (a4*a2+(a3**2))   * (b[6:-12, 9:-9]+b[7:-11, 9:-9])) - \
                u[:, 5:-13, 9:-9] * (a5*a1   * (b[4:-14, 9:-9]+b[10:-8, 9:-9]) +  a1*(a5+a4)       * (b[5:-13, 9:-9]+b[9:-9, 9:-9])   + (a4*a1+a3*a2)     * (b[6:-12, 9:-9]+b[8:-10, 9:-9])  + 2*a3*a2           *  b[7:-11, 9:-9])+ \
                u[:, 6:-12, 9:-9] * (a5*a2   * (b[4:-14, 9:-9]+b[11:-7, 9:-9]) + (a5*a2+a4*a1)     * (b[5:-13, 9:-9]+b[10:-8, 9:-9])  +  a1*(a4+a3)       * (b[6:-12, 9:-9]+b[9:-9, 9:-9])   + (a3*a1+(a2**2))   * (b[7:-11, 9:-9]+b[8:-10, 9:-9])) - \
                u[:, 7:-11, 9:-9] * (a5*a3   * (b[4:-14, 9:-9]+b[12:-6, 9:-9]) + (a5*a3+a4*a2)     * (b[5:-13, 9:-9]+b[11:-7, 9:-9])  + (a4*a2+a3*a1)     * (b[6:-12, 9:-9]+b[10:-8, 9:-9])  +  a1*(a3+a2)       * (b[7:-11, 9:-9]+b[9:-9, 9:-9])   + 2*a2*a1           *  b[8:-10, 9:-9])+ \
                u[:, 8:-10, 9:-9] * (a5*a4   * (b[4:-14, 9:-9]+b[13:-5, 9:-9]) +  a4*(a5+a3)       * (b[5:-13, 9:-9]+b[12:-6, 9:-9])  +  a3*(a4+a2)       * (b[6:-12, 9:-9]+b[11:-7, 9:-9])  +  a2*(a3+a1)       * (b[7:-11, 9:-9]+b[10:-8, 9:-9])  +  a1*(a1+a2)       * (b[8:-10, 9:-9]+b[9:-9, 9:-9])) - \
                u[:, 9:-9, 9:-9]  * ((a5**2) * (b[4:-14, 9:-9]+b[14:-4, 9:-9]) + ((a5**2)+(a4**2)) * (b[5:-13, 9:-9]+b[13:-5, 9:-9])  + ((a4**2)+(a3**2)) * (b[6:-12, 9:-9]+b[12:-6, 9:-9])  + ((a3**2)+(a2**2)) * (b[7:-11, 9:-9]+b[11:-7, 9:-9])  + ((a2**2)+(a1**2)) * (b[8:-10, 9:-9]+b[10:-8, 9:-9]) + 2*(a1**2) * b[9:-9, 9:-9])+ \
                u[:, 10:-8, 9:-9] * (a5*a4   * (b[14:-4, 9:-9]+b[5:-13, 9:-9]) +  a4*(a5+a3)       * (b[13:-5, 9:-9]+b[6:-12, 9:-9])  +  a3*(a4+a2)       * (b[12:-6, 9:-9]+b[7:-11, 9:-9])  +  a2*(a3+a1)       * (b[11:-7, 9:-9]+b[8:-10, 9:-9])  +  a1*(a1+a2)       * (b[10:-8, 9:-9]+b[9:-9, 9:-9])) - \
                u[:, 11:-7, 9:-9] * (a5*a3   * (b[14:-4, 9:-9]+b[6:-12, 9:-9]) + (a5*a3+a4*a2)     * (b[13:-5, 9:-9]+b[7:-11, 9:-9])  + (a4*a2+a3*a1)     * (b[12:-6, 9:-9]+b[8:-10, 9:-9])  +  a1*(a3+a2)       * (b[11:-7, 9:-9]+b[9:-9, 9:-9])   + 2*a2*a1           *  b[10:-8, 9:-9])+ \
                u[:, 12:-6, 9:-9] * (a5*a2   * (b[14:-4, 9:-9]+b[7:-11, 9:-9]) + (a5*a2+a4*a1)     * (b[13:-5, 9:-9]+b[8:-10, 9:-9])  +  a1*(a4+a3)       * (b[12:-6, 9:-9]+b[9:-9, 9:-9])   + (a3*a1+(a2**2))   * (b[11:-7, 9:-9]+b[10:-8, 9:-9])) - \
                u[:, 13:-5, 9:-9] * (a5*a1   * (b[14:-4, 9:-9]+b[8:-10, 9:-9]) +  a1*(a5+a4)       * (b[13:-5, 9:-9]+b[9:-9, 9:-9])   + (a4*a1+a3*a2)     * (b[12:-6, 9:-9]+b[10:-8, 9:-9])  + 2*a3*a2           *  b[11:-7, 9:-9])+ \
                u[:, 14:-4, 9:-9] * (a5*a1   * (b[14:-4, 9:-9]+b[9:-9, 9:-9])  + (a5*a1+a4*a2)     * (b[13:-5, 9:-9]+b[10:-8, 9:-9])  + (a4*a2+(a3**2))   * (b[12:-6, 9:-9]+b[11:-7, 9:-9])) - \
                u[:, 15:-3, 9:-9] * (a5*a2   * (b[14:-4, 9:-9]+b[10:-8, 9:-9]) + (a5*a2+a4*a3)     * (b[13:-5, 9:-9]+b[11:-7, 9:-9])  + 2*a4*a3           *  b[12:-6, 9:-9])+ \
                u[:, 16:-2, 9:-9] * (a5*a3   * (b[14:-4, 9:-9]+b[11:-7, 9:-9]) + (a5*a3+(a4**2))   * (b[13:-5, 9:-9]+b[12:-6, 9:-9])) - \
                u[:, 17:-1, 9:-9] *  a5*a4   * (b[14:-4, 9:-9]+b[13:-5, 9:-9]+b[12:-6, 9:-9])+ \
                u[:, 18:, 9:-9]   * (a5**2)  * (b[14:-4, 9:-9]+b[13:-5, 9:-9]) + \
                u[:, 9:-9, :-18]  * (a5**2)  * (b[9:-9, 4:-14]+b[9:-9, 5:-13]) - \
                u[:, 9:-9, 1:-17] *  a5*a4   * (b[9:-9, 4:-14]+b[9:-9, 5:-13]+b[9:-9, 6:-12])+ \
                u[:, 9:-9, 2:-16] * (a5*a3   * (b[9:-9, 4:-14]+b[9:-9, 7:-11]) + (a5*a3+(a4**2))   * (b[9:-9, 5:-13]+b[9:-9, 6:-12])) - \
                u[:, 9:-9, 3:-15] * (a5*a2   * (b[9:-9, 4:-14]+b[9:-9, 8:-10]) + (a5*a2+a4*a3)     * (b[9:-9, 5:-13]+b[9:-9, 7:-11])  + 2*a4*a3           *  b[9:-9, 6:-12])+ \
                u[:, 9:-9, 4:-14] * (a5*a1   * (b[9:-9, 4:-14]+b[9:-9, 9:-9])  + (a5*a1+a4*a2)     * (b[9:-9, 5:-13]+b[9:-9, 8:-10])  + (a4*a2+(a3**2))   * (b[9:-9, 6:-12]+b[9:-9, 7:-11])) - \
                u[:, 9:-9, 5:-13] * (a5*a1   * (b[9:-9, 4:-14]+b[9:-9, 10:-8]) +  a1*(a5+a4)       * (b[9:-9, 5:-13]+b[9:-9, 9:-9])   + (a4*a1+a3*a2)     * (b[9:-9, 6:-12]+b[9:-9, 8:-10])  + 2*a3*a2           *  b[9:-9, 7:-11])+ \
                u[:, 9:-9, 6:-12] * (a5*a2   * (b[9:-9, 4:-14]+b[9:-9, 11:-7]) + (a5*a2+a4*a1)     * (b[9:-9, 5:-13]+b[9:-9, 10:-8])  +  a1*(a4+a3)       * (b[9:-9, 6:-12]+b[9:-9, 9:-9])   + (a3*a1+(a2**2))   * (b[9:-9, 7:-11]+b[9:-9, 8:-10])) - \
                u[:, 9:-9, 7:-11] * (a5*a3   * (b[9:-9, 4:-14]+b[9:-9, 12:-6]) + (a5*a3+a4*a2)     * (b[9:-9, 5:-13]+b[9:-9, 11:-7])  + (a4*a2+a3*a1)     * (b[9:-9, 6:-12]+b[9:-9, 10:-8])  +  a1*(a3+a2)       * (b[9:-9, 7:-11]+b[9:-9, 9:-9])   + 2*a2*a1           *  b[9:-9, 8:-10])+ \
                u[:, 9:-9, 8:-10] * (a5*a4   * (b[9:-9, 4:-14]+b[9:-9, 13:-5]) +  a4*(a5+a3)       * (b[9:-9, 5:-13]+b[9:-9, 12:-6])  +  a3*(a4+a2)       * (b[9:-9, 6:-12]+b[9:-9, 11:-7])  +  a2*(a3+a1)       * (b[9:-9, 7:-11]+b[9:-9, 10:-8])  +  a1*(a1+a2)       * (b[9:-9, 8:-10]+b[9:-9, 9:-9])) - \
                u[:, 9:-9, 9:-9]  * ((a5**2) * (b[9:-9, 4:-14]+b[9:-9, 14:-4]) + ((a5**2)+(a4**2)) * (b[9:-9, 5:-13]+b[9:-9, 13:-5])  + ((a4**2)+(a3**2)) * (b[9:-9, 6:-12]+b[9:-9, 12:-6])  + ((a3**2)+(a2**2)) * (b[9:-9, 7:-11]+b[9:-9, 11:-7])  + ((a2**2)+(a1**2)) * (b[9:-9, 8:-10]+b[9:-9, 10:-8]) + 2*(a1**2) * b[9:-9, 9:-9])+ \
                u[:, 9:-9, 10:-8] * (a5*a4   * (b[9:-9, 14:-4]+b[9:-9, 5:-13]) +  a4*(a5+a3)       * (b[9:-9, 13:-5]+b[9:-9, 6:-12])  +  a3*(a4+a2)       * (b[9:-9, 12:-6]+b[9:-9, 7:-11])  +  a2*(a3+a1)       * (b[9:-9, 11:-7]+b[9:-9, 8:-10])  +  a1*(a1+a2)       * (b[9:-9, 10:-8]+b[9:-9, 9:-9])) - \
                u[:, 9:-9, 11:-7] * (a5*a3   * (b[9:-9, 14:-4]+b[9:-9, 6:-12]) + (a5*a3+a4*a2)     * (b[9:-9, 13:-5]+b[9:-9, 7:-11])  + (a4*a2+a3*a1)     * (b[9:-9, 12:-6]+b[9:-9, 8:-10])  +  a1*(a3+a2)       * (b[9:-9, 11:-7]+b[9:-9, 9:-9])   + 2*a2*a1           *  b[9:-9, 10:-8])+ \
                u[:, 9:-9, 12:-6] * (a5*a2   * (b[9:-9, 14:-4]+b[9:-9, 7:-11]) + (a5*a2+a4*a1)     * (b[9:-9, 13:-5]+b[9:-9, 8:-10])  +  a1*(a4+a3)       * (b[9:-9, 12:-6]+b[9:-9, 9:-9])   + (a3*a1+(a2**2))   * (b[9:-9, 11:-7]+b[9:-9, 10:-8])) - \
                u[:, 9:-9, 13:-5] * (a5*a1   * (b[9:-9, 14:-4]+b[9:-9, 8:-10]) +  a1*(a5+a4)       * (b[9:-9, 13:-5]+b[9:-9, 9:-9])   + (a4*a1+a3*a2)     * (b[9:-9, 12:-6]+b[9:-9, 10:-8])  + 2*a3*a2           *  b[9:-9, 11:-7])+ \
                u[:, 9:-9, 14:-4] * (a5*a1   * (b[9:-9, 14:-4]+b[9:-9, 9:-9])  + (a5*a1+a4*a2)     * (b[9:-9, 13:-5]+b[9:-9, 10:-8])  + (a4*a2+(a3**2))   * (b[9:-9, 12:-6]+b[9:-9, 11:-7])) - \
                u[:, 9:-9, 15:-3] * (a5*a2   * (b[9:-9, 14:-4]+b[9:-9, 10:-8]) + (a5*a2+a4*a3)     * (b[9:-9, 13:-5]+b[9:-9, 11:-7])  + 2*a4*a3           *  b[9:-9, 12:-6])+ \
                u[:, 9:-9, 16:-2] * (a5*a3   * (b[9:-9, 14:-4]+b[9:-9, 11:-7]) + (a5*a3+(a4**2))   * (b[9:-9, 13:-5]+b[9:-9, 12:-6])) - \
                u[:, 9:-9, 17:-1] *  a5*a4   * (b[9:-9, 14:-4]+b[9:-9, 13:-5]+b[9:-9, 12:-6])+ \
                u[:, 9:-9, 18:]   * (a5**2)  * (b[9:-9, 14:-4]+b[9:-9, 13:-5])))
